class SQL_CONST {

    // Estoque
    static SQL_ESTOQUE_FIND = "SELECT ID, IDEMPRESA, IDPRODUTO, QUANTIDADE FROM ESTOQUE WHERE IDPRODUTO = ?;";
    static SQL_ESTOQUE_INSERT = "INSERT INTO ESTOQUE (IDEMPRESA, IDPRODUTO, QUANTIDADE) VALUES (?, ?, ?);";
    static SQL_ESTOQUE_UPDATEQTD = 'UPDATE ESTOQUE SET QUANTIDADE = ? WHERE ID = ?;'

    // Licenca
    static SQL_GET_LICENCA = 'SELECT FIRST 1 DATA_VENCIMENTO, DIAS_RESET FROM LAMMER_LIC ORDER BY CODIGO DESC;'
    static SQL_SET_LAMMER_LIC = 'INSERT INTO LAMMER_LIC(`CNPJ_EMPRESA`, `ID_TERMINAL`, `DATA_ATIVACAO`, `DIAS_RESET`, `DATA_VENCIMENTO`, `DATA_PAGAMENTO`) VALUES (?, ?, ?, ?, ?, ?);'
    static SQL_SET_LICENCA = 'UPDATE LAMMER_LIC SET DATA_ATIVACAO = ?, DIAS_RESET = ?, DATA_VENCIMENTO = ?, DATA_PAGAMENTO = ?, ULTIMO_SERIAL = ?, DATA_ULTIMA_ALTERACAO = current_timestamp, SINCRONIZADO = "N" WHERE 1 = 1';
    static SQL_GET_SBT = "SELECT 'DATA_VENC', A.* FROM (SELECT DATA_VENCIMENTO as CONFIG FROM LAMMER_LIC ORDER BY CODIGO DESC LIMIT 1) A UNION SELECT 'SBT', SBT FROM CONFIG;"
    static SQL_GET_FORNECEDORES = 'SELECT ID, NOME FROM FORNECEDORES;'

    // Produto Aliquota
    static SQL_PRODUTO_ALIQUOTA_INSERT = "INSERT INTO PRODUTO_ALIQUOTA (IDPRODUTO, UF, CST, CFOP, ALIQUOTA, REDUCAO_BASE, ALIQUOTA_FECOEP, DATA_ULTIMA_ALTERACAO, MD5) VALUES (?, ?, ?, ?, ? , ?, ?, current_timestamp, UUID());";
    static SQL_PRODUTO_ALIQUOTA_FIND = "SELECT * FROM PRODUTO_ALIQUOTA WHERE IDPRODUTO = ?;";

}

class VARIABLE_CONST {
    static C_TOKEN_MASTER = '4y0h9WnLw'
}
module.exports = { SQL_CONST, VARIABLE_CONST }